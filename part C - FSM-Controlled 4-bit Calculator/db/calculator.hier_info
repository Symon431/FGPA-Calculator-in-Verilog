|calculator
clk => clk.IN2
reset => reset.IN2
start => start.IN1
enter => enter.IN1
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
op_code[0] => op_code[0].IN1
op_code[1] => op_code[1].IN1
op_code[2] => op_code[2].IN1
compute_op[0] => compute_op[0].IN1
compute_op[1] => compute_op[1].IN1
HEX0[0] <= display_logic:display.seg_ones
HEX0[1] <= display_logic:display.seg_ones
HEX0[2] <= display_logic:display.seg_ones
HEX0[3] <= display_logic:display.seg_ones
HEX0[4] <= display_logic:display.seg_ones
HEX0[5] <= display_logic:display.seg_ones
HEX0[6] <= display_logic:display.seg_ones
HEX1[0] <= display_logic:display.seg_tens
HEX1[1] <= display_logic:display.seg_tens
HEX1[2] <= display_logic:display.seg_tens
HEX1[3] <= display_logic:display.seg_tens
HEX1[4] <= display_logic:display.seg_tens
HEX1[5] <= display_logic:display.seg_tens
HEX1[6] <= display_logic:display.seg_tens
HEX2[0] <= display_logic:display.seg_hundreds
HEX2[1] <= display_logic:display.seg_hundreds
HEX2[2] <= display_logic:display.seg_hundreds
HEX2[3] <= display_logic:display.seg_hundreds
HEX2[4] <= display_logic:display.seg_hundreds
HEX2[5] <= display_logic:display.seg_hundreds
HEX2[6] <= display_logic:display.seg_hundreds
HEX3[0] <= fsm:fsm_inst.state
HEX3[1] <= fsm:fsm_inst.state
HEX3[2] <= fsm:fsm_inst.state
result[0] <= result_internal[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_internal[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_internal[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_internal[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_internal[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_internal[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result_internal[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result_internal[7].DB_MAX_OUTPUT_PORT_TYPE
done <= calculator_datapath:dp.done
negative <= calculator_datapath:dp.negative
div_by_zero <= calculator_datapath:dp.div_by_zero


|calculator|fsm:fsm_inst
clk => state[0]~reg0.CLK
clk => state[1]~reg0.CLK
clk => state[2]~reg0.CLK
reset => state[0]~reg0.ACLR
reset => state[1]~reg0.ACLR
reset => state[2]~reg0.ACLR
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => Mux2.IN7
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
op_code[0] <= op_code.DB_MAX_OUTPUT_PORT_TYPE
op_code[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
op_code[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
wrt_addr <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
compute_op[0] <= <GND>
compute_op[1] <= <GND>
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp
clk => clk.IN3
reset => reset.IN3
data_in[0] => data_in[0].IN2
data_in[1] => data_in[1].IN2
data_in[2] => data_in[2].IN2
data_in[3] => data_in[3].IN2
op_code[0] => op_code[0].IN1
op_code[1] => op_code[1].IN2
op_code[2] => op_code[2].IN1
compute_op[0] => compute_op[0].IN1
compute_op[1] => compute_op[1].IN1
result[0] <= alu:alu_inst.result
result[1] <= alu:alu_inst.result
result[2] <= alu:alu_inst.result
result[3] <= alu:alu_inst.result
result[4] <= alu:alu_inst.result
result[5] <= alu:alu_inst.result
result[6] <= alu:alu_inst.result
result[7] <= alu:alu_inst.result
done <= alu:alu_inst.done
negative <= alu:alu_inst.negative
div_by_zero <= alu:alu_inst.div_by_zero


|calculator|calculator_datapath:dp|decoder_1to2:dec
write_addr => sel.DATAB
write_addr => sel.DATAB
load => sel.OUTPUTSELECT
load => sel.OUTPUTSELECT
sel[0] <= sel.DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|dff4:reg_A
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
reset => q[0]~reg0.ACLR
reset => q[1]~reg0.ACLR
reset => q[2]~reg0.ACLR
reset => q[3]~reg0.ACLR
load => q[3]~reg0.ENA
load => q[2]~reg0.ENA
load => q[1]~reg0.ENA
load => q[0]~reg0.ENA
d[0] => q[0]~reg0.DATAIN
d[1] => q[1]~reg0.DATAIN
d[2] => q[2]~reg0.DATAIN
d[3] => q[3]~reg0.DATAIN
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|dff4:reg_B
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
reset => q[0]~reg0.ACLR
reset => q[1]~reg0.ACLR
reset => q[2]~reg0.ACLR
reset => q[3]~reg0.ACLR
load => q[3]~reg0.ENA
load => q[2]~reg0.ENA
load => q[1]~reg0.ENA
load => q[0]~reg0.ENA
d[0] => q[0]~reg0.DATAIN
d[1] => q[1]~reg0.DATAIN
d[2] => q[2]~reg0.DATAIN
d[3] => q[3]~reg0.DATAIN
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst
clk => negative~reg0.CLK
clk => div_by_zero~reg0.CLK
clk => done~reg0.CLK
clk => result[0]~reg0.CLK
clk => result[1]~reg0.CLK
clk => result[2]~reg0.CLK
clk => result[3]~reg0.CLK
clk => result[4]~reg0.CLK
clk => result[5]~reg0.CLK
clk => result[6]~reg0.CLK
clk => result[7]~reg0.CLK
reset => negative~reg0.ACLR
reset => div_by_zero~reg0.ACLR
reset => done~reg0.ACLR
reset => result[0]~reg0.ACLR
reset => result[1]~reg0.ACLR
reset => result[2]~reg0.ACLR
reset => result[3]~reg0.ACLR
reset => result[4]~reg0.ACLR
reset => result[5]~reg0.ACLR
reset => result[6]~reg0.ACLR
reset => result[7]~reg0.ACLR
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
op_code[0] => Mux8.IN10
op_code[0] => Decoder1.IN2
op_code[0] => Mux9.IN5
op_code[0] => Mux10.IN5
op_code[0] => Mux11.IN5
op_code[0] => Mux12.IN5
op_code[0] => Mux13.IN5
op_code[0] => Mux14.IN5
op_code[0] => Mux15.IN5
op_code[0] => Mux16.IN5
op_code[1] => Mux8.IN9
op_code[1] => Decoder1.IN1
op_code[1] => Mux9.IN4
op_code[1] => Mux10.IN4
op_code[1] => Mux11.IN4
op_code[1] => Mux12.IN4
op_code[1] => Mux13.IN4
op_code[1] => Mux14.IN4
op_code[1] => Mux15.IN4
op_code[1] => Mux16.IN4
op_code[2] => Mux8.IN8
op_code[2] => Decoder1.IN0
op_code[2] => Mux9.IN3
op_code[2] => Mux10.IN3
op_code[2] => Mux11.IN3
op_code[2] => Mux12.IN3
op_code[2] => Mux13.IN3
op_code[2] => Mux14.IN3
op_code[2] => Mux15.IN3
op_code[2] => Mux16.IN3
compute_op[0] => compute_op[0].IN1
compute_op[1] => Mux0.IN3
compute_op[1] => Mux1.IN3
compute_op[1] => Mux2.IN3
compute_op[1] => Mux3.IN3
compute_op[1] => Mux4.IN3
compute_op[1] => Mux5.IN3
compute_op[1] => Mux6.IN3
compute_op[1] => Mux7.IN3
compute_op[1] => Decoder0.IN0
result[0] <= result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
div_by_zero <= div_by_zero~reg0.DB_MAX_OUTPUT_PORT_TYPE
negative <= negative~reg0.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
OP => OP.IN2
S[0] <= ripple_carry_adder_4bit:RCA.Sum
S[1] <= ripple_carry_adder_4bit:RCA.Sum
S[2] <= ripple_carry_adder_4bit:RCA.Sum
S[3] <= ripple_carry_adder_4bit:RCA.Sum
S[4] <= <GND>
S[5] <= <GND>
S[6] <= <GND>
S[7] <= <GND>


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|mux2to1:B_selector
in0[0] => out.DATAA
in0[1] => out.DATAA
in0[2] => out.DATAA
in0[3] => out.DATAA
in1[0] => out.DATAB
in1[1] => out.DATAB
in1[2] => out.DATAB
in1[3] => out.DATAB
sel => out.OUTPUTSELECT
sel => out.OUTPUTSELECT
sel => out.OUTPUTSELECT
sel => out.OUTPUTSELECT
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|mux2to1_1bit:Cin_selector
in0 => out.DATAA
in1 => out.DATAB
sel => out.OUTPUTSELECT
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|ripple_carry_adder_4bit:RCA
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
Cin => Cin.IN1
Sum[0] <= full_adder_1bit:fa0.Sum
Sum[1] <= full_adder_1bit:fa1.Sum
Sum[2] <= full_adder_1bit:fa2.Sum
Sum[3] <= full_adder_1bit:fa3.Sum
Cout <= full_adder_1bit:fa3.Cout


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|ripple_carry_adder_4bit:RCA|full_adder_1bit:fa0
A => Add0.IN1
B => Add0.IN2
Cin => Add1.IN4
Sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|ripple_carry_adder_4bit:RCA|full_adder_1bit:fa1
A => Add0.IN1
B => Add0.IN2
Cin => Add1.IN4
Sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|ripple_carry_adder_4bit:RCA|full_adder_1bit:fa2
A => Add0.IN1
B => Add0.IN2
Cin => Add1.IN4
Sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|calculator|calculator_datapath:dp|alu:alu_inst|adder_subtractor:add_sub|ripple_carry_adder_4bit:RCA|full_adder_1bit:fa3
A => Add0.IN1
B => Add0.IN2
Cin => Add1.IN4
Sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|calculator|display_logic:display
binary_in[0] => Div0.IN14
binary_in[0] => Mod0.IN14
binary_in[0] => Mod1.IN11
binary_in[1] => Div0.IN13
binary_in[1] => Mod0.IN13
binary_in[1] => Mod1.IN10
binary_in[2] => Div0.IN12
binary_in[2] => Mod0.IN12
binary_in[2] => Mod1.IN9
binary_in[3] => Div0.IN11
binary_in[3] => Mod0.IN11
binary_in[3] => Mod1.IN8
binary_in[4] => Div0.IN10
binary_in[4] => Mod0.IN10
binary_in[4] => Mod1.IN7
binary_in[5] => Div0.IN9
binary_in[5] => Mod0.IN9
binary_in[5] => Mod1.IN6
binary_in[6] => Div0.IN8
binary_in[6] => Mod0.IN8
binary_in[6] => Mod1.IN5
binary_in[7] => Div0.IN7
binary_in[7] => Mod0.IN7
binary_in[7] => Mod1.IN4
seg_hundreds[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg_hundreds[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg_hundreds[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg_hundreds[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg_hundreds[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg_hundreds[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg_hundreds[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[0] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[1] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[2] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[4] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[5] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
seg_tens[6] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[0] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[1] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[2] <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[3] <= WideOr17.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[4] <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[5] <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
seg_ones[6] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE


